---
AWSTemplateFormatVersion: '2010-09-09'
Description: Elastic Beanstalk Application

Parameters:
  ApplicationName:
    Description: Name of your application
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"

  AppS3Bucket:
    Description: S3 Bucket containing your application package.
    Type: String
    MinLength: 1
    MaxLength: 255

  AppS3Key:
    Description: S3 Bucket key for your application package
    Type: String
    MinLength: 1
    MaxLength: 255

Resources:
  ElasticBeanstalkServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
          "Statement": [{
            "Effect": "Allow",
            "Principal": { "Service": [ "elasticbeanstalk.amazonaws.com" ]},
            "Action": [ "sts:AssumeRole" ]
          }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService

  Application:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Ref ApplicationName

  ApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !Ref Application
      SourceBundle:
        S3Bucket: !Ref AppS3Bucket
        S3Key: !Ref AppS3Key

  # IAM resources
  AppRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole

  AppPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: App
      Roles:
      - !Ref AppRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action: "*"
            Resource: "*"

  AppInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref AppRole

Outputs:
  StackName:
    Description: Name of the CloudFormation Stack
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub ${AWS::StackName}-StackName

  ApplicationName:
    Description: Elastic Beanstalk Application Name
    Value: !Ref ApplicationName
    Export:
      Name: !Sub ${AWS::StackName}-ApplicationName

  ApplicationVersionLabel:
    Description: Application Version Label
    Value: !Ref ApplicationVersion
    Export:
      Name: !Sub ${AWS::StackName}-ApplicationVersionLabel

  ApplicationArn:
    Description: Elastic Beanstalk Application ARN
    Value: !Ref Application
    Export:
      Name: !Sub ${AWS::StackName}-ApplicationArn

  S3BucketName:
    Description: S3 Bucket containing application package
    Value: !Ref AppS3Bucket
    Export:
      Name: !Sub ${AWS::StackName}-S3BucketName

  S3BucketKey:
    Description: S3 Key for application package
    Value: !Ref AppS3Key
    Export:
      Name: !Sub ${AWS::StackName}-S3BucketKey

  ElasticBeanstalkServiceRoleArn:
    Description: Elastic Beanstalk Service Role ARN
    Value: !GetAtt ElasticBeanstalkServiceRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-ElasticBeanstalkServiceRoleArn

  ElasticBeanstalkServiceRoleName:
    Description: Elastic Beanstalk Service Role Name
    Value: !Ref ElasticBeanstalkServiceRole
    Export:
      Name: !Sub ${AWS::StackName}-ElasticBeanstalkServiceRoleName

  AppRoleArn:
    Description: Application Role ARN
    Value: !GetAtt AppRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-AppRoleArn

  AppRoleName:
    Description: Application Role Name
    Value: !Ref AppRole
    Export:
      Name: !Sub ${AWS::StackName}-AppRoleName

  AppInstanceProfileArn:
    Description: Application Instance Profile ARN
    Value: !GetAtt AppInstanceProfile.Arn
    Export:
      Name: !Sub ${AWS::StackName}-AppInstanceProfileArn

  AppInstanceProfileName:
    Description: Application Instance Profile Name
    Value: !Ref AppInstanceProfile
    Export:
      Name: !Sub ${AWS::StackName}-AppInstanceProfileName
